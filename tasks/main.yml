---
- name: Install rabbitmq-server package (from RabbitMQ repo)
  package:
    name: rabbitmq-server
    state: present

- name: Configure erlang cookie
  template:
    src: erlang.cookie.j2
    dest: /var/lib/rabbitmq/.erlang.cookie
    owner: rabbitmq
    group: rabbitmq
    mode: 0400
    backup: true

- name: Start Rabbitmq Server
  systemd:
    state: started
    name: rabbitmq-server

- name: Check if cluster its OK
  command: bash -c "rabbitmqctl list_policies | grep ha-inventory"
  ignore_errors: true
  register: rabbitmq_is_ok

- name: Stop rabbitmq-server
  systemd:
    state: stopped
    name: rabbitmq-server
  when: rabbitmq_is_ok is failed

- name: Detache all rabbitmq nodes
  command: rabbitmq-server -detached
  when: rabbitmq_is_ok is failed

- name: Stop rabbitmq nodes
  command: rabbitmqctl stop_app
  when:
    - rabbitmq_is_ok is failed
    - inventory_hostname != "{{ rabbitmq_master }}"

- name: Join all rabbitmq slaves into master
  command: rabbitmqctl join_cluster rabbit@{{ rabbitmq_master_node }}
  when:
    - rabbitmq_is_ok is failed
    - inventory_hostname != "{{ rabbitmq_master }}"

- name: Start all rabbitmq nodes
  command: rabbitmqctl start_app
  when:
    - rabbitmq_is_ok is failed
    - inventory_hostname != "{{ rabbitmq_master }}"

- name: Create HA replica
  command: rabbitmqctl set_policy ha-inventory "" '{"ha-mode":"all", "ha-sync-mode":"automatic" }'
  when:
    - rabbitmq_is_ok is failed
    - inventory_hostname == "{{ rabbitmq_master }}"

- name: Enable cluster management
  rabbitmq_plugin:
    names: rabbitmq_management
    state: enabled

- name: Configure user for management plugin
  rabbitmq_user:
    user: "{{ admin_user }}"
    password: "{{ admin_password }}"
    tags: administrator,"{{ admin_user }}"
    vhost: /
    configure_priv: .*
    write_priv: .*
    read_priv: .*
    state: present
  when:
    - rabbitmq_is_ok is failed
    - inventory_hostname == "{{ rabbitmq_master }}"

- name: Configure rabbitmq config
  template:
    src: rabbit_conf.j2
    dest: /etc/rabbitmq/rabbitmq.config

- name: Configure high memory Watermark
  command: rabbitmqctl set_vm_memory_high_watermark {{ watermark }}
  when: rabbitmq_is_ok is failed

- name: kill epmd
  command: pkill -u rabbitmq
  when:
    - rabbitmq_is_ok is failed
